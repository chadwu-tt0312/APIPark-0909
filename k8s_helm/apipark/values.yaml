# Default values for apipark
# This is a YAML-formatted file.

# Global settings
global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""

# MySQL Configuration
mysql:
  enabled: true
  image:
    repository: mysql
    tag: "8.0.37"
    pullPolicy: IfNotPresent
  service:
    type: NodePort # 改為 NodePort 以支援外部連接
    port: 3306
    nodePort: 31306 # 對應 docker-compose 的端口映射
  persistence:
    enabled: true
    storageClass: ""
    accessMode: ReadWriteOnce
    size: 20Gi
  auth:
    rootPassword: "123456"
    database: "apipark"
    username: "root"
    password: "123456"
  resources:
    limits:
      memory: 1Gi
      cpu: 500m
    requests:
      memory: 512Mi
      cpu: 250m

# Redis Configuration
redis:
  enabled: true
  image:
    repository: redis
    tag: "7.2.4"
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 6379
  persistence:
    enabled: true
    storageClass: ""
    accessMode: ReadWriteOnce
    size: 5Gi
  auth:
    password: "123456"
  resources:
    limits:
      memory: 512Mi
      cpu: 250m
    requests:
      memory: 256Mi
      cpu: 100m

# InfluxDB Configuration
influxdb:
  enabled: true
  image:
    repository: influxdb
    tag: "2.6"
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8086
  persistence:
    enabled: true
    storageClass: ""
    accessMode: ReadWriteOnce
    size: 10Gi
  auth:
    username: "admin"
    password: "Key123qaz"
    org: "apipark"
    bucket: "apinto"
    token: "dQ9>fK6&gJ"
  resources:
    limits:
      memory: 1Gi
      cpu: 500m
    requests:
      memory: 512Mi
      cpu: 250m

# Loki Configuration
loki:
  enabled: true
  image:
    repository: grafana/loki
    tag: "3.2.1"
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 3100
  persistence:
    enabled: true
    storageClass: ""
    accessMode: ReadWriteOnce
    size: 10Gi
  resources:
    limits:
      memory: 1Gi
      cpu: 500m
    requests:
      memory: 512Mi
      cpu: 250m

# Grafana Configuration
grafana:
  enabled: true
  image:
    repository: grafana/grafana
    tag: "11.3.2"
    pullPolicy: IfNotPresent
  service:
    type: NodePort # 改為 NodePort 以支援外部連接
    port: 3000
    nodePort: 31300 # 新增 NodePort 配置
  persistence:
    enabled: true
    storageClass: ""
    accessMode: ReadWriteOnce
    size: 5Gi
  auth:
    anonymousEnabled: true
    anonymousOrgRole: "Admin"
  resources:
    limits:
      memory: 1Gi
      cpu: 500m
    requests:
      memory: 512Mi
      cpu: 250m

# NSQ Configuration
nsq:
  enabled: true
  image:
    repository: nsqio/nsq
    tag: "v1.3.0"
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    ports:
      - name: tcp
        port: 4150
      - name: http
        port: 4151
  resources:
    limits:
      memory: 512Mi
      cpu: 250m
    requests:
      memory: 256Mi
      cpu: 100m

# Apinto Gateway Configuration
apinto:
  enabled: true
  image:
    repository: eolinker/apinto-gateway
    tag: "0.22.11"
    pullPolicy: IfNotPresent
  service:
    type: ClusterIP
    port: 8099 # 主要 HTTP 端口
    ports:
      - name: http
        port: 8099
      - name: admin
        port: 9400
      - name: metrics
        port: 9401
  persistence:
    enabled: true
    storageClass: ""
    accessMode: ReadWriteOnce
    size: 5Gi
  resources:
    limits:
      memory: 1Gi
      cpu: 500m
    requests:
      memory: 512Mi
      cpu: 250m

# APIPark Main Application Configuration
apipark:
  enabled: true
  image:
    repository: apipark/apipark
    # tag: "v1.9.5-beta-0911"
    tag: "v1.9.5-beta"
    pullPolicy: IfNotPresent
  service:
    type: NodePort # 改為 NodePort 以支援外部連接
    port: 8288
    nodePort: 31288 # 對應 docker-compose 的端口映射
  replicaCount: 1
  env:
    MYSQL_USER_NAME: "root"
    MYSQL_PWD: "123456"
    MYSQL_IP: "apipark-mysql"
    MYSQL_PORT: "3306"
    MYSQL_DB: "apipark"
    ERROR_DIR: "work/logs"
    ERROR_FILE_NAME: "error.log"
    ERROR_LOG_LEVEL: "info"
    ERROR_EXPIRE: "7d"
    ERROR_PERIOD: "day"
    REDIS_ADDR: "apipark-redis:6379"
    REDIS_PWD: "123456"
    ADMIN_PASSWORD: "aToh0eag"
    Init: "true"
    InfluxdbToken: "dQ9>fK6&gJ"
  resources:
    limits:
      memory: 2Gi
      cpu: 1000m
    requests:
      memory: 1Gi
      cpu: 500m

# Service Account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Pod Security Context
podSecurityContext:
  fsGroup: 2000

# Security Context
securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: false
  runAsNonRoot: false
  runAsUser: 0

# Node Selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}
