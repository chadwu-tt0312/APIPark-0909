###
curl http://192.168.31.180:5678/api/v1/health

###
curl http://127.0.0.1:5678/api/v1/health

### ApiPark Dashboard
curl http://172.21.122.231:18288/

### ApiPark(status) ("status": 404)
curl http://172.21.122.231:9400/status

### ApiPark (internal) (X)
curl http://127.0.0.1:8288/api/v1/account/login

### ApiPark (Open API 文件-openai AI Service)
curl http://172.21.122.231:18288/api/v1/service/apidoc/ac57f97a-6fb0-45c3-be08-9d466129a889

### ApiPark (Open API 文件-test-health)
curl http://172.21.122.231:18288/api/v1/service/apidoc/fb1cfee0-0105-4460-86ca-e8fa234e93e7

### ApiPark (服務/openai AI Service)
curl -X POST http://172.21.122.231:8099/ac5900f8/chat/completions
-H "Content-Type: application/json"
-H "Authorization: e4431991-9c47-4596-bf35-c7d21e3ea22b"
-d '
{
  "messages": [
    {
      "content": "Hello, who are you?",
      "role": "user"
    }
  ],
  "stream": false
}
'
### ApiPark (服務/test-health Service)
curl -X GET http://172.21.122.231:8099/fb1cfee0/health
-H "Authorization: e4431991-9c47-4596-bf35-c7d21e3ea22b"

### ApiPark (401)
curl -X POST "http://172.21.122.231:18288/api/v1/system/general"
-H "Content-Type: application/json" 
-H "Authorization: e4431991-9c47-4596-bf35-c7d21e3ea22b"
-d '{"site_prefix":"http://114.33.48.242:18288"}'

### ApiPark MCP (404)
curl http://172.21.122.231:18288/openapi/v1/mcp/service/ac57f97a-6fb0-45c3-be08-9d466129a889/sse?apikey=e4431991-9c47-4596-bf35-c7d21e3ea22b

### ------------- 25-09-08 NEW setting 

### Demo Application (504 API 沒有啟動)
#@USER_KEY = 716e0e9e-10eb-4378-ae25-997810c88cac
#curl -X GET http://172.21.122.231:8099/e72569cf/health
#curl http://172.21.122.231:18288/api/v1/service/apidoc/307eb7d6-17d7-4106-8b08-801d09baea37
@USER_KEY = 79821a66-7e1f-4d94-9a3a-8662eb2dfd54
curl http://172.21.122.231:8099/2b6df069/health22
-X GET
-H "Authorization: {{USER_KEY}}"

###
curl http://172.21.122.231:18288/api/v1/service/apidoc/7166e372-aa80-4809-b155-0aa05fa09805
### test-user
curl -X GET http://172.21.122.231:8099/21844f24/health
-H "Authorization: b1403c34-aa10-450d-9ca7-b51861903be2"

### test-02 (403 Forbidden) 沒有訂閱API的消費者的KEY
curl -X GET http://172.21.122.231:8099/21844f24/health
-H "Authorization: d7866f7e-88f9-40d3-a0f3-d6a478b8a2ea"

### PEI Knowledge Base RAG
curl http://172.21.122.231:18288/api/v1/service/apidoc/9f33f9d4-5fdb-4744-bcbc-edf7e44bc521

###
curl http://172.21.122.231:8099/36ffbb2d/Pei_Knnowledge_Rag
-X GET 
-H "Authorization: {{USER_KEY}}"


### ================= Health2 Restful Service =================
@USER_KEY_180 = 7ae87bc4-d140-47ce-a64c-e026261fdba3

curl -X GET "http://192.168.31.180:31289/707fc562/health2"
-H "Authorization: {{USER_KEY_180}}"

###
curl -X GET "http://192.168.31.180:30080/apinto/707fc562/health2"
-H "Host: apipark.local"
-H "Authorization: {{USER_KEY_180}}"

###
curl http://192.168.31.180:31288/api/v1/service/apidoc/763ab945-3c5f-41f6-bf95-50605f2e5157
-H "Host: apipark.local"

###
curl http://192.168.31.180:31288/api/v1/account/login/username
-d '{"name":"admin","password":"aToh0eag"}'

# response:
Set-Cookie: session=0f712446-39b1-4cb1-904b-e1482df70168;

###
@COOKIE_KEY = 0f712446-39b1-4cb1-904b-e1482df70168
curl http://192.168.31.180:31288/api/v1/system/general
-H "Cookie: session={{COOKIE_KEY}}"

### API gateway-01
curl http://192.168.31.180:31288/api/v1/cluster/check 
-X POST 
-d '{"address":"apipark-apinto:9400"}'

# response (peer_address 與其他不同)
{
  "data": {
    "nodes": [
      {
        "id": "dfe82c72e657e766",
        "name": "72aaac5ed9ea45949a3425593da16a90",
        "manager_address": [
          "http://10.244.0.85:9400"
        ],
        "peer_address": [
          "http://10.244.0.75:9401"
        ],
        "service_address": [
          "https://10.244.0.85:8099",
          "http://10.244.0.85:8099"
        ],
        "status": 1
      }
    ]
  },
  "code": 0,
  "success": "success"
}

### API gateway-02
curl http://192.168.31.180:31288/api/v1/cluster/reset 
-X PUT 
-d '{"manager_address":"apipark-apinto:9400"}'

# response (peer_address 與其他不同) addr 改 "10.244.0.188:9400" 就可以相同
{
  "data": {
    "nodes": [
      {
        "id": "dfe82c72e657e766",
        "name": "72aaac5ed9ea45949a3425593da16a90",
        "manager_address": [
          "http://10.244.0.85:9400"
        ],
        "peer_address": [
          "http://10.244.0.75:9401"
        ],
        "service_address": [
          "http://10.244.0.85:8099",
          "https://10.244.0.85:8099"
        ],
        "status": 1
      }
    ]
  },
  "code": 0,
  "success": "success"
}

### get loki
curl -X GET "http://192.168.31.180:31288/api/v1/log/loki"
  -H "Cookie: session={{COOKIE_KEY}}"

### Set loki
curl -X POST "http://192.168.31.180:31288/api/v1/log/loki"
  -H "Content-Type: application/json"
  -H "Cookie: session={{COOKIE_KEY}}"
  -d '{"config":{"url":"http://apipark-loki:3100"}}'


### logs
curl http://192.168.31.180:31288/api/v1/service/logs/rest?service=a00ca1fc-c8a5-49a7-968c-3f7be172a519&team=c65bd5a2-40de-42e5-94ce-87e8e4300720&start=1760198400&end=1760427836&page=1&page_size=20
-H "Cookie: session={{COOKIE_KEY}}"

# response
{
  "data": {
    "logs": [
      {
        "id": "abcb664d-7b73-4243-b94a-7945dbdc3dca",
        "api": {
          "id": "8c3786b2-1c7c-4827-b053-e800ad2d00b7",
          "name": "8c3786b2-1c7c-4827-b053-e800ad2d00b7"
        },
        "status": 200,
        "log_time": "2025-10-14 15:40:07",
        "ip": "127.0.0.1",
        "consumer": {
          "id": "c58f4e79-4da9-4828-b9e6-9ebf8a8a530b",
          "name": "Demo Application"
        },
        "response_time": "4ms",
        "traffic": "46B"
      }
    ],
    "total": 1
  },
  "code": 0,
  "success": "success"
}

### overview-1 (總覽)
curl http://192.168.31.180:31288/api/v1/service/overview/monitor/rest?service=a00ca1fc-c8a5-49a7-968c-3f7be172a519&team=c65bd5a2-40de-42e5-94ce-87e8e4300720&start=1760341740&end=1760428140
-H "Cookie: session={{COOKIE_KEY}}"

# response
{
  "data": {
    "overview": {
      "enable_mcp": true,
      "subscriber_num": 1,
      "api_num": 1,
      "service_kind": "rest",
      "available_monitor": true,
      "request_overview": [],
      "avg_request_per_subscriber_overview": [],
      "max_request_per_subscriber": 1,
      "min_request_per_subscriber": 1,
      "request_total": 1,
      "request_2xx_total": 1,
      "request_4xx_total": 0,
      "request_5xx_total": 0,
      "traffic_overview": [],
      "traffic_2xx_total": 46,
      "traffic_4xx_total": 0,
      "traffic_5xx_total": 0,
      "avg_response_time_overview": [],
      "avg_traffic_per_subscriber_overview": [],
      "traffic_total": 46,
      "avg_response_time": 4,
      "max_response_time": 4,
      "min_response_time": 4,
      "date": [],
      "max_traffic_per_subscriber": 46,
      "min_traffic_per_subscriber": 46
    }
  },
  "code": 0,
  "success": "success"
}

### overview-2 (總覽)
curl http://192.168.31.180:31288/api/v1/service/monitor/top10?service=a00ca1fc-c8a5-49a7-968c-3f7be172a519&team=c65bd5a2-40de-42e5-94ce-87e8e4300720&start=1760341620&end=1760428020
-H "Cookie: session={{COOKIE_KEY}}"

# response
{
  "data": {
    "apis": [
      {
        "id": "8c3786b2-1c7c-4827-b053-e800ad2d00b7",
        "name": "8c3786b2-1c7c-4827-b053-e800ad2d00b7",
        "request": "1",
        "traffic": "46B"
      }
    ],
    "consumers": [
      {
        "id": "c58f4e79-4da9-4828-b9e6-9ebf8a8a530b",
        "name": "Demo Application",
        "request": "1",
        "traffic": "46B"
      }
    ]
  },
  "code": 0,
  "success": "success"
}

### API 路由
curl http://192.168.31.180:31288/api/v1/service/routers?service=a00ca1fc-c8a5-49a7-968c-3f7be172a519&team=c65bd5a2-40de-42e5-94ce-87e8e4300720&keyword=
-H "Cookie: session={{COOKIE_KEY}}"

# response
{
  "data": {
    "routers": [
      {
        "id": "8c3786b2-1c7c-4827-b053-e800ad2d00b7",
        "name": "8c3786b2-1c7c-4827-b053-e800ad2d00b7",
        "methods": [
          "GET",
          "POST",
          "PUT",
          "DELETE",
          "PATCH",
          "OPTIONS"
        ],
        "protocols": [
          "HTTP",
          "HTTPS"
        ],
        "request_path": "/4e5fdf32/health2",
        "description": "auto create by create service",
        "disabled": false,
        "creator": {
          "id": "admin",
          "name": "admin"
        },
        "updater": {
          "id": "admin",
          "name": "admin"
        },
        "create_time": "2025-10-14 15:38:30",
        "update_time": "2025-10-14 15:38:30",
        "can_delete": true
      }
    ]
  },
  "code": 0,
  "success": "success"
}

### API 文檔
curl http://192.168.31.180:31288/api/v1/service/api_doc?service=a00ca1fc-c8a5-49a7-968c-3f7be172a519&team=c65bd5a2-40de-42e5-94ce-87e8e4300720
-H "Cookie: session={{COOKIE_KEY}}"

# response
{
  "data": {
    "doc": {
      "content": "components:\n    schemas:\n        HealthResponse:\n            properties:\n                message:\n                    example: Service is healthy\n                    type: string\n                status:\n                    example: ok\n                    type: string\n            type: object\ninfo:\n    description: 健康檢查 API 文件\n    title: Health2 Restful Service\n    version: 1.0.0\nopenapi: 3.0.0\npaths:\n    /4e5fdf32/health2:\n        get:\n            description: 取得健康檢查資訊\n            responses:\n                \"200\":\n                    content:\n                        application/json:\n                            schema:\n                                $ref: '#/components/schemas/HealthResponse'\n                    description: 成功取得健康檢查資訊\n            summary: health2\n            tags:\n                - health\nservers:\n    - url: http://192.168.31.180:5678\n",
      "updater": "admin",
      "update_time": "2025-10-14 15:38:30"
    }
  },
  "code": 0,
  "success": "success"
}

### 上游
curl http://192.168.31.180:31288/api/v1/service/upstream?service=a00ca1fc-c8a5-49a7-968c-3f7be172a519&team=c65bd5a2-40de-42e5-94ce-87e8e4300720
-H "Cookie: session={{COOKIE_KEY}}"

# response
{
  "data": {
    "upstream": {
      "driver": "http",
      "balance": "round-robin",
      "timeout": 30000,
      "retry": 0,
      "remark": "",
      "limit_peer_second": 0,
      "proxy_headers": [],
      "scheme": "http",
      "pass_host": "pass",
      "upstream_host": "",
      "nodes": [
        {
          "address": "192.168.31.180:5678",
          "weight": 100
        }
      ],
      "discover": {
        "discover": "",
        "service": ""
      }
    }
  },
  "code": 0,
  "success": "success"
}

### 發布
curl http://192.168.31.180:31288/api/v1/service/releases?service=a00ca1fc-c8a5-49a7-968c-3f7be172a519&team=c65bd5a2-40de-42e5-94ce-87e8e4300720
-H "Cookie: session={{COOKIE_KEY}}"

# response
{
  "data": {
    "releases": [
      {
        "id": "07ead387-f8c2-4f64-b0dd-08df96007542",
        "version": "v1",
        "service": {
          "id": "a00ca1fc-c8a5-49a7-968c-3f7be172a519",
          "name": "Health2 Restful Service"
        },
        "create_time": "2025-10-14 15:38:30",
        "creator": {
          "id": "admin",
          "name": "admin"
        },
        "status": "running",
        "flowId": "c0f1a8a2-2559-4420-b51b-f6131f1f2a5a",
        "remark": "Auto create v1 release for quick create service",
        "can_rollback": true
      }
    ]
  },
  "code": 0,
  "success": "success"
}

### 設置
curl http://192.168.31.180:31288/api/v1/service/info?team=c65bd5a2-40de-42e5-94ce-87e8e4300720&service=a00ca1fc-c8a5-49a7-968c-3f7be172a519
-H "Cookie: session={{COOKIE_KEY}}"

# response
{
  "data": {
    "service": {
      "id": "a00ca1fc-c8a5-49a7-968c-3f7be172a519",
      "name": "Health2 Restful Service",
      "prefix": "/4e5fdf32",
      "description": "Auto create by upload swagger",
      "team": {
        "id": "c65bd5a2-40de-42e5-94ce-87e8e4300720",
        "name": "Default Team"
      },
      "create_time": "2025-10-14 15:38:30",
      "update_time": "2025-10-14 15:38:30",
      "service_type": "public",
      "catalogue": {
        "id": "50bab8e0-0f8c-438a-9264-cb20ea75074e",
        "name": "Default Category"
      },
      "tags": null,
      "logo": "",
      "approval_type": "auto",
      "service_kind": "rest",
      "state": "public",
      "model_mapping": "",
      "as_server": true,
      "as_app": false,
      "enable_mcp": true
    }
  },
  "code": 0,
  "success": "success"
}

# ================= Loki =================
# start 是 24 小時前（以 nanosecond 為單位）
# end 是現在

### loki labels
curl -G "http://localhost:3100/loki/api/v1/labels" \
--data-urlencode "start=$(($(date +%s%N)-3600*24_000_000_000))" \
--data-urlencode "end=$(date +%s%N)" 

### loki labels-2
curl -G "http://localhost:3100/loki/api/v1/labels" \
--data-urlencode "start=$(date -d '24 hour ago' +%s%N)" \
--data-urlencode "end=$(date +%s%N)" 

### loki series
curl -G "http://localhost:3100/loki/api/v1/series" \
--data-urlencode "start=$(($(date +%s%N)-3600*24_000_000_000))" \
--data-urlencode "end=$(date +%s%N)"

### loki query
curl -G "http://localhost:3100/loki/api/v1/query_range" \
--data-urlencode 'query={cluster="a3e22d5b-bb13-46ea-a39d-bd53bee8eefe"}' \
--data-urlencode 'limit=10' | jq

# loki query-2
curl -s "http://localhost:3100/loki/api/v1/query_range?query=%7Bcluster%3D%22a3e22d5b-bb13-46ea-a39d-bd53bee8eefe%22%7D&limit=10"

### add job (測試是否真的能寫入 Loki) ({job="test", service_name="test"})
curl -X POST "http://localhost:3100/loki/api/v1/push" \
-H "Content-Type: application/json" \
-d '{
  "streams": [
    {
      "stream": { \"job\": \"test\" },
      "values": [ [ "'$(date +%s%N)'", \"hello from curl\" ] ]
    }
  ]
}'

### loki push (X)
curl -X POST http://localhost:3100/loki/api/v1/push \
  -H "Content-Type: application/json" \
  -d '{ 
    "streams": [
      {
        "labels": "{cluster=\"test-cluster\", node=\"test-node\", service_name=\"test-service\"}",
        "entries": [
          {
            "ts": "'$(date -u +%Y-%m-%dT%H:%M:%S.%3N)Z'",
            "line": "測試日誌訊息"
          }
        ]
      }
    ]
  }'

# ================= apinto =================  
###
curl -s http://localhost:9400/api/output

# response
[
  {
    "create": "2025-10-15 15:33:34",
    "description": "",
    "driver": "influxdbv2",
    "id": "default_influxdb@output",
    "name": "default_influxdb",
    "profession": "output",
    "update": "2025-10-15 15:33:34",
    "version": "20251015153334"
  },
  {
    "create": "2025-10-15 15:33:34",
    "description": "collect access log",
    "driver": "loki",
    "id": "loki@output",
    "name": "loki",
    "profession": "output",
    "update": "2025-10-15 15:33:34",
    "version": "20251015153334"
  },
  {
    "create": "2025-10-15 15:33:34",
    "description": "auto init nsqd config",
    "driver": "nsqd",
    "id": "ai_event@output",
    "name": "ai_event",
    "profession": "output",
    "update": "2025-10-15 15:33:34",
    "version": "20251015153334"
  }
]

###
curl -s http://localhost:9400/api/output/loki@output

# response
{
  "create": "2025-10-15 15:33:34",
  "description": "collect access log",
  "driver": "loki",
  "formatter": {
    "fields": [
      "$msec",
      "$service",
      "$provider",
      "$scheme as request_scheme",
      "$url as request_uri",
      "$host as request_host",
      "$header as request_header",
      "$remote_addr",
      "$request_body",
      "$proxy_body",
      "$proxy_method",
      "$proxy_scheme",
      "$proxy_uri",
      "$api",
      "$proxy_host",
      "$proxy_header",
      "$proxy_addr",
      "$response_header",
      "$response_headers",
      "$status",
      "$content_type",
      "$proxy_status",
      "$request_time",
      "$response_time",
      "$node",
      "$cluster",
      "$application",
      "$src_ip",
      "$block_name as strategy",
      "$request_id",
      "$request_method",
      "$authorization",
      "$response_body",
      "$proxy_response_body",
      "$ai_provider",
      "$ai_model",
      "$ai_model_input_token",
      "$ai_model_output_token",
      "$ai_model_total_token"
    ]
  },
  "headers": {},
  "id": "loki@output",
  "labels": {
    "cluster": "$cluster",
    "node": "$node"
  },
  "matches": null,
  "method": "POST",
  "name": "loki",
  "profession": "output",
  "scopes": [
    "access_log"
  ],
  "type": "json",
  "update": "2025-10-15 15:33:34",
  "url": "http://apipark-loki:3100",
  "version": "20251015153334"
}

###
curl -s http://localhost:9400/api/setting/plugin

# response
{
  "plugins": [
    {
      "config": null,
      "id": "eolinker.com:apinto:access_log",
      "name": "access_log",
      "rely": "",
      "status": "global"
    },
    {
      "config": null,
      "id": "eolinker.com:apinto:monitor",
      "name": "monitor",
      "rely": "",
      "status": "global"
    },
    {
      "config": null,
      "id": "eolinker.com:apinto:proxy_rewrite_v2",
      "name": "proxy_rewrite",
      "rely": "",
      "status": "enable"
    },
    {
      "config": {
        "force_auth": true
      },
      "id": "eolinker.com:apinto:plugin_app",
      "name": "app",
      "rely": "",
      "status": "global"
    },
    {
      "config": {
        "response": {
          "body": "Forbidden",
          "charset": "utf-8",
          "content_type": "text/plan",
          "status_code": 403
        },
        "rules": [
          {
            "a": "service_of_api:#{api}",
            "b": "subscription_service:#{application}"
          }
        ]
      },
      "id": "eolinker.com:apinto:access_relational",
      "name": "access_relational",
      "rely": "",
      "status": "global"
    },
    {
      "config": null,
      "id": "eolinker.com:apinto:extra_params",
      "name": "extra_params",
      "rely": "",
      "status": "enable"
    },
    {
      "config": null,
      "id": "eolinker.com:apinto:strategy-plugin-visit",
      "name": "strategy_visit",
      "rely": "",
      "status": "global"
    },
    {
      "config": null,
      "id": "eolinker.com:apinto:strategy-plugin-grey",
      "name": "strategy_grey",
      "rely": "",
      "status": "global"
    },
    {
      "config": {
        "cache": "redis@output"
      },
      "id": "eolinker.com:apinto:strategy-plugin-limiting",
      "name": "strategy_limiting",
      "rely": "",
      "status": "global"
    },
    {
      "config": {
        "cache": "redis@output"
      },
      "id": "eolinker.com:apinto:strategy-plugin-fuse",
      "name": "strategy_fuse",
      "rely": "",
      "status": "global"
    },
    {
      "config": {
        "cache": "redis@output"
      },
      "id": "eolinker.com:apinto:strategy-plugin-cache",
      "name": "strategy_cache",
      "rely": "",
      "status": "global"
    },
    {
      "config": {
        "cache": "redis@output"
      },
      "id": "eolinker.com:apinto:strategy-plugin-data_mask",
      "name": "strategy_data_mask",
      "rely": "",
      "status": "global"
    },
    {
      "config": null,
      "id": "eolinker.com:apinto:ai_prompt",
      "name": "ai_prompt",
      "rely": "",
      "status": "enable"
    },
    {
      "config": null,
      "id": "eolinker.com:apinto:ai_formatter",
      "name": "ai_formatter",
      "rely": "",
      "status": "enable"
    }
  ]
}

###
curl -s http://localhost:9400/api/router

# response
[
  {
    "create": "2025-10-15 15:40:11",
    "description": "auto create by create service",
    "driver": "http",
    "id": "4e1cf7bc-b604-4b61-8bd9-963b88139242@router",
    "name": "4e1cf7bc-b604-4b61-8bd9-963b88139242",
    "profession": "router",
    "update": "2025-10-15 15:40:11",
    "version": "fe1c9bfb-74e7-44b0-a5e4-13827f883c98"
  }
]

###
curl -s http://localhost:9400/api/plugin/global/access_log

# response
{"status":404,"header":null,"data":null}

###
curl -X POST 'http://localhost:9400/api/output' \
-H 'Content-Type:application/json' \
-d '{
  "name": "demo_file",
  "driver": "file",
  "dir": "/var/log/apinto",
  "file": "demo",
  "period": "day",
  "expire": 3,
  "type": "line",
  "formatter": {
    "fields": ["$request_id", "$request", "$status", "@time", "@proxy", "$response_time"],
    "time": ["$msec", "$time_iso8601", "$time_local"],
    "proxy": ["$proxy_uri", "$proxy_scheme", "$proxy_addr"]
  },
  "matches": {
    "module": "file-access-log"
  },
  "scopes": [
      "access_log"
  ]
}'

# curl -s http://localhost:9400/api/output/demo_file@output
# response
{
  "create": "2025-10-15 17:34:32",
  "description": "",
  "dir": "/var/log/apinto",
  "driver": "file",
  "expire": 3,
  "file": "demo",
  "formatter": {
    "fields": [
      "$request_id",
      "$request",
      "$status",
      "@time",
      "@proxy",
      "$response_time"
    ],
    "proxy": [
      "$proxy_uri",
      "$proxy_scheme",
      "$proxy_addr"
    ],
    "time": [
      "$msec",
      "$time_iso8601",
      "$time_local"
    ]
  },
  "id": "demo_file@output",
  "matches": {
    "module": "file-access-log"
  },
  "name": "demo_file",
  "period": "day",
  "profession": "output",
  "scopes": [
    "access_log"
  ],
  "type": "line",
  "update": "2025-10-15 18:01:21",
  "version": "20251015180121"
}

### update loki@output
curl -X PUT http://localhost:9400/api/output/loki@output \
  -H "Content-Type: application/json" \
  -d '{
    "name": "loki",
    "description": "collect access log",
    "driver": "loki",
    "url": "http://apipark-loki:3100",
    "method": "POST",
    "scopes": ["access_log"],
    "labels": {
      "cluster": "$cluster",
      "node": "$node"
    },
    "type": "json",
    "formatter": {
      "fields": [
        "$msec",
        "$service",
        "$provider",
        "$scheme as request_scheme",
        "$url as request_uri",
        "$host as request_host",
        "$header as request_header",
        "$remote_addr",
        "$request_body",
        "$proxy_body",
        "$proxy_method",
        "$proxy_scheme",
        "$proxy_uri",
        "$api",
        "$proxy_host",
        "$proxy_header",
        "$proxy_addr",
        "$response_header",
        "$response_headers",
        "$status",
        "$content_type",
        "$proxy_status",
        "$request_time",
        "$response_time",
        "$node",
        "$cluster",
        "$application",
        "$src_ip",
        "$block_name as strategy",
        "$request_id",
        "$request_method",
        "$authorization",
        "$response_body",
        "$proxy_response_body",
        "$ai_provider",
        "$ai_model",
        "$ai_model_input_token",
        "$ai_model_output_token",
        "$ai_model_total_token"
      ]
    }
  }'

# response
{
  "create": "2025-10-15 15:33:34",
  "description": "collect access log",
  "driver": "loki",
  "formatter": {
    "fields": [
      "$msec",
      "$service",
      "$provider",
      "$scheme as request_scheme",
      "$url as request_uri",
      "$host as request_host",
      "$header as request_header",
      "$remote_addr",
      "$request_body",
      "$proxy_body",
      "$proxy_method",
      "$proxy_scheme",
      "$proxy_uri",
      "$api",
      "$proxy_host",
      "$proxy_header",
      "$proxy_addr",
      "$response_header",
      "$response_headers",
      "$status",
      "$content_type",
      "$proxy_status",
      "$request_time",
      "$response_time",
      "$node",
      "$cluster",
      "$application",
      "$src_ip",
      "$block_name as strategy",
      "$request_id",
      "$request_method",
      "$authorization",
      "$response_body",
      "$proxy_response_body",
      "$ai_provider",
      "$ai_model",
      "$ai_model_input_token",
      "$ai_model_output_token",
      "$ai_model_total_token"
    ]
  },
  "id": "loki@output",
  "labels": {
    "cluster": "$cluster",
    "node": "$node"
  },
  "matches": null,
  "method": "POST",
  "name": "loki@output",
  "profession": "output",
  "scopes": [
    "access_log"
  ],
  "type": "json",
  "update": "2025-10-15 20:47:03",
  "url": "http://apipark-loki:3100",
  "version": "20251015204703"
}
